System information Have written custom opposed using stock script provided TensorFlow OS Platform Distribution Linux Ubuntu TensorFlow installed binary bynary gpu TensorFlow command da CUDA cuDNN CUDA GPU memory NVIDIA GTX Describe current behavior trying optimize optimization using object detection given tree master tftrt examples object detection So loads perfect try optimize segmentation fault raise Describe expected behavior Code reproduce Graph default graph Session config config sess frozen graph create inference graph graph frozen graph outputs names max batch max batch max workspace bytes max workspace bytes precision mode precision mode minimum segment minimum segment dynamic op True maximum cached engines maximum cached engines So segmentation fault occurs create create interference graph Other info logs This log common runtime gpu gpu Adding visible gpu devices common runtime gpu gpu Device interconnect StreamExecutor strength edge matrix common runtime gpu gpu common runtime gpu gpu common runtime gpu gpu Created TensorFlow job localhost replica task GPU MB memory physical GPU name GeForce GTX GB pci bus id compute capability INFO Running TensorRT INFO Running TensorRT grappler devices Number eligible GPUs count grappler clusters single machine Starting new session common runtime gpu gpu Adding visible gpu devices common runtime gpu gpu Device interconnect StreamExecutor strength edge matrix common runtime gpu gpu common runtime gpu gpu common runtime gpu gpu Created TensorFlow job localhost replica task GPU MB memory physical GPU name GeForce GTX GB pci bus id compute capability contrib segment segment There ops different types graph converted TensorRT Fill Switch Range TopKV ConcatV Identity Squeeze Transpose Const Unpack ResizeBilinear Reshape Mul Slice Merge Split Where ExpandDims NonMaxSuppressionV GatherV Cast Greater Minimum Sub ZerosLike Pack Exp Placeholder Add Shape NoOp StridedSlice For information see docs nvidia deeplearning dgx integrate index html support ops contrib graph Number TensorRT candidate segments contrib graph TensorRT TRTEngineOp added segment consisting nodes succeeded Segmentation fault dumped And callstack gdb contrib graph TensorRT TRTEngineOp added segment consisting nodes succeeded Thread received signal SIGSEGV Segmentation fault fff GetDeviceAndAllocator ConversionParams const EngineInfo const local dist packages contrib wrap conversion gdb bt fff GetDeviceAndAllocator ConversionParams const EngineInfo const local dist packages contrib wrap conversion fff aa ConvertAfterShapes ConversionParams local dist packages contrib wrap conversion fff f TRTOptimizationPass Optimize grappler Cluster grappler GrapplerItem const GraphDef local dist packages contrib wrap conversion fffb ee grappler MetaOptimizer RunOptimizer grappler GraphOptimizer grappler Cluster grappler GrapplerItem GraphDef grappler MetaOptimizer GraphOptimizationResult local dist packages pywrap internal fffb grappler MetaOptimizer OptimizeGraph grappler Cluster grappler GrapplerItem const GraphDef local dist packages pywrap internal fffb grappler MetaOptimizer Optimize grappler Cluster grappler GrapplerItem const GraphDef local dist packages pywrap internal fffb ab TF OptimizeGraph GCluster ConfigProto const MetaGraphDef const bool string const TF Status local dist packages pywrap internal fffb wrap TF OptimizeGraph local dist packages pywrap internal f PyEval EvalFrameDefault f PyEval EvalFrameDefault f PyEval EvalFrameDefault f PyEval EvalFrameDefault PyEval EvalCode cd PyRun InteractiveLoopFlags PyRun AnyFileExFlags Py Main f main System information Have written custom opposed using stock script provided TensorFlow No OS Platform Distribution Linux Ubuntu TensorFlow installed binary TensorFlow command Bazel compiling NA CUDA cuDNN No gpu GPU memory No gpu Describe current behavior following script using able successfully deeplabv mnv pascal train pb drive google xKI SIrXB Wl SBuX D otI nuHjza view tflite format script follows tflite test lite graph deeplabv mnv pascal tain pb arrays ImageTensor arrays SemanticPredictions shapes inference QUANTIZED UINT inference FLOAT mean values dev values obtained arrays arrays deeplabv mnv pascal train pb using following script gf GraphDef open deeplabv mnv pascal tain pb rb gf ParseFromString read We get names nodes gf print name To get op planning apply steps towards custom trained tflite format My drive google YUoayPHOqnkd PR QVBS Vzk r p view script get arrays arrays ran following tflite test lite graph graph pb arrays Const arrays detection masks shapes inference QUANTIZED UINT inference FLOAT mean values dev values getting following error platform cpu feature guard Your CPU supports instructions TensorFlow binary compiled AVX FMA Traceback recent call last home ajinkya local packages framework ops shape unknown shape framework errors impl InvalidArgumentError Shapes must equal rank During handling exception exception occurred Traceback recent call last home ajinkya local bin tflite module sys exit main home ajinkya local packages contrib lite tflite main app main main argv sys argv home ajinkya local packages platform app sys exit main argv home ajinkya local packages contrib lite tflite main tflite flags home ajinkya local packages contrib lite tflite converter get toco converter flags home ajinkya local packages contrib lite tflite get toco converter converter converter kwargs home ajinkya local packages contrib lite lite frozen graph shapes tensors shapes home ajinkya local packages contrib lite saved shapes shape shape home ajinkya local packages framework ops shape raise ValueError str ValueError Shapes must equal rank How resolve error em Please make sure bug As per GitHub Policy blob master ISSUES md address bugs performance issues feature requests build installation issues GitHub tag bug template em System information OS Platform Distribution Linux Ubuntu Linux Ubuntu LTS TensorFlow installed binary pip TensorFlow command Describe current behavior testing distributed machine opened two separate shells created cluster using cluster train ClusterSpec { local localhost localhost } train Server cluster job name local task index shell cluster train ClusterSpec { local localhost localhost } train Server cluster job name local task index shell On shell ran numpy np add NUM ones np ones NUM graph Graph graph default va Variable ones vb Variable ones job local task inputs va vb function add inputs float Session grpc localhost graph graph sess sess global variables initializer print sess va vb print sess returns error InternalError see traceback expected func backed memory job local replica task CPU actually job localhost replica task CPU This bug happen replace function func Describe expected behavior Code successfully like using func print arrays array array array This one ToDo items 