Changed exception statement lite toco tflite export Placeholder array specied arrays Placeholder array specified arrays This PR one steps extend bit quantization support symmetric bit activations Each activation symmetric around zero The weight precision remains bit signed values The bias precision In PR introduce implementation tests MUL kernel reference function The specification operator MUL Input range granularity per zero point Input range granularity per zero point Output range granularity per zero point granularity per zero point em Please make sure bug As per GitHub Policy blob master ISSUES md address bugs performance issues feature requests build installation issues GitHub tag bug template em System information Have written custom opposed using stock script provided TensorFlow OS Platform Distribution Linux Ubuntu Ubuntu Mobile iPhone Pixel Samsung Galaxy happens mobile A TensorFlow installed binary binary TensorFlow command Bazel compiling A GCC Compiler compiling A CUDA cuDNN A GPU memory A Describe current behavior CONV DEPTHWISE CONV depth Describe expected behavior CONV CONV Code reproduce depth CON D layer TFLite converter DEPTHWISE CONV Although computationally identical cause confusion potentially bug To replicate problem numpy np gen calibration dataset range yield np rand astype np float get keras conv keras layers Input shape conv keras layers Conv D filters kernel activation nn relu conv keras layers Conv D filters kernel activation nn relu conv keras models Model inputs outputs conv summary gen keras get keras conv converter lite TFLiteConverter keras keras tflite quant converter open conv tflite wb write tflite quant gen keras summary gives Model Layer Output Shape Param InputLayer None conv Conv D None conv Conv D None But inspect netron lutzroeder netron bazel lite tools visualize conv tflite conv html shows image images githubusercontent af ea daf ced png image images githubusercontent ea ac de png Other info logs A resolves 